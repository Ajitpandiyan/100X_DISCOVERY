name: Backend CI/CD

on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
    branches: [ main ]
  pull_request:
    paths:
      - 'backend/**'
    branches: [ main ]

env:
  PYTHON_VERSION: "3.9"
  # Define Docker image name in lowercase to avoid Docker errors
  DOCKER_IMAGE: "ghcr.io/ajitpandiyan/100x-discovery-backend"

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install black isort

    - name: Check formatting with Black
      run: |
        cd backend
        python -m black . --check
    
    - name: Check imports with isort
      run: |
        cd backend
        python -m isort . --check-only --profile black

  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
    
    - name: Create test environment file
      run: |
        cd backend
        echo "ENVIRONMENT=test" > .env
        echo "GROQ_API_KEY=dummy_key_for_testing" >> .env
        echo "BACKEND_CORS_ORIGINS=[\"http://localhost:8501\"]" >> .env
    
    - name: Run tests
      run: |
        cd backend
        python -m pytest tests/test_basic.py -v
      env:
        ENVIRONMENT: test
        GROQ_API_KEY: dummy_key_for_testing
        PYTHONPATH: ${{ github.workspace }}/backend

  build-and-push:
    needs: [test]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:latest
          ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: [build-and-push]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: https://app.koyeb.com
    
    steps:
    - name: Deploy to Production
      run: |
        echo "Backend would be deployed to Koyeb in a real environment."
        echo "For now, we consider the deployment successful."
        echo "Deployment step completed!" 