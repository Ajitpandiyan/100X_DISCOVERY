name: Backend CI/CD

on:
  push:
    paths:
      - 'backend/**'
    branches: [ main ]
  pull_request:
    paths:
      - 'backend/**'
    branches: [ main ]

env:
  PYTHON_VERSION: "3.9"
  DOCKER_IMAGE: ghcr.io/${{ github.repository_owner }}/100x-discovery-backend

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install black isort

    - name: Check formatting with Black
      run: |
        cd backend
        python -m black . --check
    
    - name: Check imports with isort
      run: |
        cd backend
        python -m isort . --check-only --profile black

  test:
    needs: lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run tests
      run: |
        cd backend
        pytest --cov=app --cov-report=xml
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: backend

  build-and-push:
    needs: [lint, test]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: ${{ env.DOCKER_IMAGE }}:latest,${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: https://app.koyeb.com
    
    steps:
    - name: Deploy to Production
      env:
        KOYEB_TOKEN: ${{ secrets.KOYEB_TOKEN }}
      run: |
        # Install Koyeb CLI
        curl -fsSL https://cli.koyeb.com/install.sh | sh
        
        # Authenticate with Koyeb
        koyeb login -t $KOYEB_TOKEN
        
        # Deploy to Koyeb
        koyeb service redeploy 100x-discovery-backend